/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.7
 * Generated at: 2025-06-28 20:11:15 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.vistas.Entrenador;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import Modelo.Ejercicio;
import java.util.List;

public final class formEjercicioRutina_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("Modelo.Ejercicio");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
 String contextPath = request.getContextPath();
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("    <head>\r\n");
      out.write("        <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.6/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-4Q6Gf2aSP4eDXB8Miphtr37CMZZQ5oXLH2yaXMJ2w8e2ZtHTl7GptT4jmndRuHDT\" crossorigin=\"anonymous\">\r\n");
      out.write("        <link rel=\"stylesheet\"\r\n");
      out.write("              href=\"https://cdn.jsdelivr.net/npm/bootstrap-icons@1.13.1/font/bootstrap-icons.min.css\">\r\n");
      out.write("        <meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\r\n");
      out.write("        <title>Formula tu ejercicio</title>\r\n");
      out.write("    </head>\r\n");
      out.write("    <body>\r\n");
      out.write("        <div class=\"col-md-8 mx-auto mt-5\">\r\n");
      out.write("            <h1>Estructura el ejercicio</h1>\r\n");
      out.write("            <form id=\"formEjercicioRutina\" action=\"\">\r\n");
      out.write("                <input type=\"hidden\" name=\"accion\" value=\"Update\">\r\n");
      out.write("                ");

                    int semana = 0, dia = 0, ordenEjercicio = 0; //, numSemanas = 0, numDias = 0, numEjercicios = 0;
                    List<Modelo.Ejercicio> lista_ejercicios = (List<Modelo.Ejercicio>) request.getAttribute("lista_ejercicios");
                    if (lista_ejercicios == null) {
                        System.out.println("primero debe hacer la tabla");
                        request.getRequestDispatcher("/vistas/Entrenador/formRutina.jsp").forward(request, response);
                    }
                    Ejercicio ejercicio = (Ejercicio) request.getAttribute("ejercicio");
                
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"ejercicio\">Ejercicio</label>\r\n");
      out.write("                    <select name=\"fkIdEjercicio\" class=\"form-control\" id=\"ejercicio\" onchange=\"TraerEjercicio()\">\r\n");
      out.write("                        ");
String selectValue = (ejercicio != null) ? ejercicio.getNomEjercicio() : "Selecciona un ejercicio";
      out.write("\r\n");
      out.write("                        ");
int selectValueId = (ejercicio != null) ? ejercicio.getIdEjercicio() : 1;
      out.write("\r\n");
      out.write("                        <option value=\"");
      out.print(selectValueId);
      out.write('"');
      out.write('>');
      out.print(selectValue);
      out.write("</option>\r\n");
      out.write("                        ");
for (Modelo.Ejercicio ejer : lista_ejercicios) {
      out.write("\r\n");
      out.write("                        <option value=\"");
      out.print( ejer.getIdEjercicio());
      out.write('"');
      out.write('>');
      out.print(ejer.getNomEjercicio());
      out.write("</option>\r\n");
      out.write("                        ");
}
      out.write("\r\n");
      out.write("                    </select>\r\n");
      out.write("                </div>\r\n");
      out.write("\r\n");
      out.write("                ");
if (ejercicio != null) {
                        System.out.println("este es el ejercicio que se encontro: " + ejercicio.toString());
      out.write("\r\n");
      out.write("                <div class=\"form-group\">\r\n");
      out.write("                    <label for=\"Series\">Series</label>\r\n");
      out.write("                    <input name=\"series\" type=\"number\" class=\"form-control\" id=\"Series\" max=\"50\">\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"Intensidad\">Intensidad</label>\r\n");
      out.write("                        <select name=\"intensidad\" class=\"form-control\" id=\"Intensidad\" required>\r\n");
      out.write("                            <option value=\"\">Elije la intensidad para realizar esta serie</option>\r\n");
      out.write("                            <option value=\"Baja\">Baja</option>\r\n");
      out.write("                            <option value=\"Media\">Media</option>\r\n");
      out.write("                            <option value=\"Moderada\">Moderada</option>\r\n");
      out.write("                            <option value=\"Alta\">Alta</option>\r\n");
      out.write("                            <option value=\"Extrema\">Extrema</option>\r\n");
      out.write("                        </select>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"Repeticiones\">Repeticiones</label>\r\n");
      out.write("                        <input name=\"repeticiones\" type=\"number\" class=\"form-control\" id=\"Repeticiones\" value=\"\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"Peso\">Peso/Tiempo</label>\r\n");
      out.write("                        <input name=\"peso\" type=\"number\" class=\"form-control\" id=\"Peso\" value=\"0\" required>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"form-group\">\r\n");
      out.write("                        <label for=\"Descanso\">Tiempo de descanso en segundos</label>\r\n");
      out.write("                        <input name=\"descanso\" type=\"number\" class=\"form-control\" id=\"Descanso\" value=\"\" placeholder=\"Ej: 60\" required>seg\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div>\r\n");
      out.write("                    <iframe width=\"560\" height=\"315\" \r\n");
      out.write("                            src=\"");
      out.print( ejercicio.getUrlVideo());
      out.write("\"\r\n");
      out.write("                            title=\"YouTube video player\" \r\n");
      out.write("                            frameborder=\"0\" \r\n");
      out.write("                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" \r\n");
      out.write("                            referrerpolicy=\"strict-origin-when-cross-origin\" \r\n");
      out.write("                            allowfullscreen>\r\n");
      out.write("                    </iframe>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"card-title mb-0 text-center\">\r\n");
      out.write("                    <button type=\"button\" class=\"btn btn-successful me-2 mt-2\" onclick=\"enviarFormularioComoGet()\">\r\n");
      out.write("                        Guardar ejercicio\r\n");
      out.write("                    </button>\r\n");
      out.write("                </div>\r\n");
      out.write("                ");
}
      out.write("\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("        <script>\r\n");
      out.write("            function TraerEjercicio() {\r\n");
      out.write("                console.log(\"Ejecutando TraerEjercicio()\");\r\n");
      out.write("\r\n");
      out.write("                // 1. Obtener el valor seleccionado del ejercicio\r\n");
      out.write("                var ejercicioId = document.getElementById(\"ejercicio\").value;\r\n");
      out.write("\r\n");
      out.write("                // 2. Obtener todos los parámetros actuales de la URL\r\n");
      out.write("                var params = new URLSearchParams(window.location.search);\r\n");
      out.write("\r\n");
      out.write("                // 3. Agregar o actualizar el parámetro fkIdEjercicio\r\n");
      out.write("                params.set(\"idEjercicio\", ejercicioId);\r\n");
      out.write("                params.set(\"accion\", \"TraerEjercicio\");       \r\n");
      out.write("\r\n");
      out.write("                // 4. Redirigir al controlador con los parámetros\r\n");
      out.write("                window.location.href = \"");
      out.print( contextPath);
      out.write("/EjercicioController?\" + params.toString();\r\n");
      out.write("            }\r\n");
      out.write("            function enviarFormularioComoGet() {\r\n");
      out.write("                const form = document.getElementById(\"formEjercicioRutina\");\r\n");
      out.write("                const inputs = form.querySelectorAll(\"input, select, textarea\");\r\n");
      out.write("\r\n");
      out.write("                // Cargar parámetros de la URL actual\r\n");
      out.write("                const currentParams = new URLSearchParams(window.location.search);\r\n");
      out.write("\r\n");
      out.write("                // Agregar también los valores del formulario\r\n");
      out.write("                inputs.forEach(input => {\r\n");
      out.write("                    if (input.name && input.value) {\r\n");
      out.write("                        currentParams.set(input.name, input.value);\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("\r\n");
      out.write("                // Redireccionar con todos los parámetros\r\n");
      out.write("                window.location.href = \"");
      out.print( contextPath);
      out.write("/Ejercicio_RutinaController?\" + currentParams.toString();\r\n");
      out.write("            }\r\n");
      out.write("        </script>\r\n");
      out.write("    </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
